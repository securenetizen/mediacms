# Generated by Django 5.2 on 2025-05-05 01:39

import django.contrib.postgres.indexes
import django.db.models.deletion
import mptt.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('files', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='category',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='files.comment'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='encoding',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files.encodeprofile'),
        ),
        migrations.AddField(
            model_name='media',
            name='category',
            field=models.ManyToManyField(blank=True, to='files.category'),
        ),
        migrations.AddField(
            model_name='media',
            name='channel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.channel'),
        ),
        migrations.AddField(
            model_name='media',
            name='existing_urls',
            field=models.ManyToManyField(blank=True, help_text='In case existing URLs of media exist, for use in migrations', to='files.existingurl'),
        ),
        migrations.AddField(
            model_name='media',
            name='license',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='files.license'),
        ),
        migrations.AddField(
            model_name='media',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='encoding',
            name='media',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encodings', to='files.media'),
        ),
        migrations.AddField(
            model_name='comment',
            name='media',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='files.media'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlists', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='playlistmedia',
            name='media',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files.media'),
        ),
        migrations.AddField(
            model_name='playlistmedia',
            name='playlist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files.playlist'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='media',
            field=models.ManyToManyField(blank=True, through='files.PlaylistMedia', to='files.media'),
        ),
        migrations.AddField(
            model_name='rating',
            name='media',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='files.media'),
        ),
        migrations.AddField(
            model_name='rating',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ratingcategory',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files.category'),
        ),
        migrations.AddField(
            model_name='rating',
            name='rating_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files.ratingcategory'),
        ),
        migrations.AddField(
            model_name='subtitle',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files.language'),
        ),
        migrations.AddField(
            model_name='subtitle',
            name='media',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtitles', to='files.media'),
        ),
        migrations.AddField(
            model_name='subtitle',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tag',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='media',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='select one or more out of the existing tags', to='files.tag'),
        ),
        migrations.AddField(
            model_name='media',
            name='topics',
            field=models.ManyToManyField(blank=True, to='files.topic'),
        ),
        migrations.AddField(
            model_name='transcriptionrequest',
            name='media',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transcriptionrequests', to='files.media'),
        ),
        migrations.AddIndex(
            model_name='rating',
            index=models.Index(fields=['user', 'media'], name='files_ratin_user_id_72ca6a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rating',
            unique_together={('user', 'media', 'rating_category')},
        ),
        migrations.AddIndex(
            model_name='media',
            index=models.Index(fields=['state', 'encoding_status', 'is_reviewed'], name='files_media_state_666b93_idx'),
        ),
        migrations.AddIndex(
            model_name='media',
            index=models.Index(fields=['state', 'encoding_status', 'is_reviewed', 'title'], name='files_media_state_43e940_idx'),
        ),
        migrations.AddIndex(
            model_name='media',
            index=models.Index(fields=['state', 'encoding_status', 'is_reviewed', 'user'], name='files_media_state_1e0540_idx'),
        ),
        migrations.AddIndex(
            model_name='media',
            index=models.Index(fields=['views', 'likes'], name='files_media_views_853616_idx'),
        ),
        migrations.AddIndex(
            model_name='media',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search'], name='files_media_search_7194c6_gin'),
        ),
    ]
